{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Overview \u00b6 This document contains documentation for the following APIs: math","title":"Introduction"},{"location":"index.html#overview","text":"This document contains documentation for the following APIs: math","title":"Overview"},{"location":"math.html","text":".math.abs \u00b6 Returns absolute value of x. This function is atomic. See abs . Parameter: Name Type Description x number A number. Returns: Type Description number Absolute value of x. .math.acos \u00b6 Returns the arccosine of x. This function is atomic. See acos . Parameter: Name Type Description x number A number. Returns: Type Description float Arccosine of x, in radians. Null is returned if x is not between -1 and 1. .math.asin \u00b6 Returns the arcsine of x. This function is atomic. See asin . Parameter: Name Type Description x number A number. Returns: Type Description float Arcsine of x, in radians. Null is returned if x is not between -1 and 1. .math.atan \u00b6 Returns the arctangent of x. This function is atomic. See atan . Parameter: Name Type Description x number A number. Returns: Type Description float Arctangent of x, in radians. .math.avg \u00b6 Arithmetic mean. See avg . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description float Arithmetic mean of x. Null is returned if x is empty, or contains both positive and negative infinity. Null items in x are ignored. See Also: .math.avgStrict .math.movingAvg .math.runningAvg .math.weightedAvg .math.avgStrict \u00b6 Arithmetic mean, strictly ignoring nulls. Parameter: Name Type Description x *[] Arbitrarily nested numeric list. Returns: Type Description * Arithmetic mean of x. Almost identical to .math.avg except that null-ignoring behavior is consistent regardless of how nested a list is. See Also: .math.avg .math.ceiling \u00b6 Round up. This function is atomic. See ceiling . Parameter: Name Type Description x number A number. Returns: Type Description long least integer greater than or equal to x. .math.correlation \u00b6 Returns correlation of two lists. See cor . Parameters: Name Type Description x number[] First numeric list. y number[] Second numeric list. Returns: Type Description float Correlation of x and y. The result is between -1 and 1. .math.cos \u00b6 Returns the cosine of x. This function is atomic. See cos . Parameter: Name Type Description x number A number in radians. Returns: Type Description float Cosine of x. The result is null if x is null or infinity. .math.covariance \u00b6 Returns covariance of two lists. See cov . Parameters: Name Type Description x number[] First numeric list. y number[] Second numeric list. Returns: Type Description float Covariance of x and y. .math.diff \u00b6 Returns differences between consecutive items in x, with the first difference being the same as the first element of x. See deltas . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number[] Differences between consecutive items in x, with the first difference being the same as the first element of x. See Also: .math.diff0 .math.diff0 \u00b6 Returns differences between consecutive items in x, with the first difference being 0. Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number[] Differences between consecutive items in x, with the first difference being 0. See Also: .math.diff .math.div \u00b6 Integer division. This function is atomic. See div . Parameters: Name Type Description x number Dividend. y number Divisor. Returns: Type Description number[] The greatest whole number that does not exceed x%y . .math.ema \u00b6 Exponential moving average. See ema . Parameters: Name Type Description x number | number[] A number or numeric list of the same length as y. y number[] A numeric list. Returns: Type Description float[] Exponential moving average of y, with x as the smoothing parameter. .math.exp \u00b6 Raise e to a power. This function is atomic. See exp . Parameter: Name Type Description x number Exponent. Returns: Type Description float The base of natural logarithms to the power of x, or null if x is null. See Also: .math.log .math.xexp .math.floor \u00b6 Round down. This function is atomic. See floor . Parameter: Name Type Description x number A number. Returns: Type Description long greatest integer less than or equal to x. .math.inv \u00b6 Matrix inverse. See inv . Parameter: Name Type Description x float[][] A matrix. Returns: Type Description float[][] Inverse of non-singular float matrix x .math.log \u00b6 Natural logarithm. This function is atomic. See log . Parameter: Name Type Description x number A number. Returns: Type Description float the natural logarithm of x, or null if x is null or less than zero, or negative infinity if x is zero. See Also: .math.exp .math.xlog .math.lsq \u00b6 Least squares, approximately matrix division. See lsq . Parameters: Name Type Description a float[][] A matrix with the same number of columns as b. b float[][] A matrix whose number of rows do not exceed the number of columns, and whose rows are linearly independent. Returns: Type Description float[][] Least-squares solution to a linear matrix equation a=x mul b where mul is matrix multiplication. See Also: .math.matmul .math.matmul \u00b6 Matrix multiplication, or dot product. See mmu . Parameters: Name Type Description x float[] | float[][] A float vector or matrix. y float[] | float[][] Another float vector or matrix, where the number of elements in y must match the number of elements in x if x is a vector, or the number of columns of x if x is a matrix. Returns: Type Description float | float[] Matrix product or dot product of x and y. See Also: .math.lsq .math.max \u00b6 Maximum. See max . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number Maximum of items in x. Nulls are ignored, except that if the items of x are all nulls, the result is negative infinity. See Also: .math.min .math.movingMax .math.runningMax .math.median \u00b6 Median. See med . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description float Median of x. .math.min \u00b6 Minimum. See min . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number Minimum of items in x. Nulls are ignored, except that if the items of x are all nulls, the result is infinity. See Also: .math.max .math.movingMin .math.runningMin .math.minStrict \u00b6 Minimum, strictly ignoring null. Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number Minimum of items in x. Almost identical to .math.min except that null-ignoring behavior is consistent regardless of how nested a list is. See Also: .math.min .math.mod \u00b6 Modulus. This function is atomic. See mod . Parameters: Name Type Description x number Dividend. y number Divisor. Returns: Type Description number The remainder of x%y . .math.movingAvg \u00b6 Moving averages. See mavg . Parameters: Name Type Description x short | int | long A positive finite integer. y number[] A numeric list. Returns: Type Description float x-item moving average of y. The first x-1 elements of the results use only the first x-1 elements of y, respectively. See Also: .math.avg .math.runningAvg .math.weightedAvg .math.movingMax \u00b6 Moving maximums. See mmax . Parameters: Name Type Description x number A positive finite integer. y number[] A numeric list. Returns: Type Description number x-item moving maximums of y. The first x-1 elements of the results use only the first x-1 elements of y, respectively. See Also: .math.max .math.movingMin .math.runningMax .math.movingMin \u00b6 Moving minimums. See mmin . Parameters: Name Type Description x number[] A positive finite integer. y number[] A numeric list. Returns: Type Description number x-item moving minimums of y. The first x-1 elements of the results use only the first x-1 elements of y, respectively. See Also: .math.min .math.movingMax .math.runningMin .math.movingStdev \u00b6 Returns x-item moving standard deviation of y. See mdev . Parameters: Name Type Description x short | int | long Number of items in the calculation scope. y number[] A numeric list. Returns: Type Description number[] x-item moving standard deviation of y. The first x-1 elements of the results use only the first x-1 elements of y, respectively. .math.movingSum \u00b6 Moving sums. See msum . Parameters: Name Type Description x short | int | long A positive finite integer. y number[] A numeric list. Returns: Type Description number x-item moving sums of y. The first x-1 elements of the results use only the first x-1 elements of y, respectively. See Also: .math.runningSum .math.sum .math.weightedSum .math.neg \u00b6 Negate. This function is atomic. See neg . Parameter: Name Type Description x bool | number A number. Returns: Type Description number Negation of x. .math.prd \u00b6 Product. See prd . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number Product of x. Nulls are treated as 1. See Also: .math.prdStrict .math.runningPrd .math.prdStrict \u00b6 Product, strictly ignoring nulls. Parameter: Name Type Description x *[] A numeric list. Returns: Type Description * Product of x. Almost identical to .math.prd except that null-ignoring behavior is consistent regardless of how nested a list is. See Also: .math.prd .math.runningAvg \u00b6 Running averages. See avgs . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description float[] Running averages of x. It applies function .math.avg to successive prefixes of x. See Also: .math.avg .math.movingAvg .math.weightedAvg .math.runningMax \u00b6 Maximums. See maxs . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number Running maximum of x. It applies function .math.max to successive prefixes of x. See Also: .math.max .math.movingMax .math.runningMin .math.runningMin \u00b6 Minimums. See mins . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number Running minimum of x. It applies function .math.min to successive prefixes of x. See Also: .math.min .math.movingMin .math.runningMax .math.runningPrd \u00b6 Products. See prds . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number Running products of x. It applies function .math.prd to successive prefixes of x. See Also: .math.prd .math.runningSum \u00b6 Running sums. See sums . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number Running sums of x. It applies function .math.sum to successive prefixes of x. See Also: .math.movingSum .math.sum .math.weightedSum .math.sin \u00b6 Returns the sine of x. This function is atomic. See sin . Parameter: Name Type Description x number A number in radians Returns: Type Description float Sine of x. The result is null if x is null or infinity. .math.stdev \u00b6 Returns standard deviation. See dev . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description float Standard deviation of x. .math.sum \u00b6 Total. See sum . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number Total of x. Null items in x are treated as zeros. See Also: .math.movingSum .math.runningSum .math.sumStrict .math.weightedSum .math.sumStrict \u00b6 Total, consistently ignoring nulls. Parameter: Name Type Description x *[] Arbitrarily nested numeric list. Returns: Type Description * Total of x. Almost identical to .math.sum except that null-ignoring behavior is consistent regardless of how nested a list is. See Also: .math.sum .math.tan \u00b6 Returns the tangent of x. This function is atomic. See tan . Parameter: Name Type Description x number A number in radians. Returns: Type Description float Tangent of x. The result is null if x is null or infinity. .math.unbiasedStdev \u00b6 Returns unbiased estimation of standard deviation. See sdev . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description float unbiased estimation of standard deviation of x. See Also: .math.stdev .math.weightedAvg \u00b6 Weighted average. See wavg . Parameters: Name Type Description x number[] A numeric list representing weights. y number[] A numeric list representing values. Returns: Type Description float Average of y weighted by x. See Also: .math.avg .math.movingAvg .math.runningAvg .math.weightedSum \u00b6 Weighted sum. See wsum . Parameters: Name Type Description x number[] A numeric list representing weights. y number[] A numeric list representing values. Returns: Type Description float Sum of y weighted by x. See Also: .math.movingSum .math.runningSum .math.sum .math.xexp \u00b6 Raise x to a power. This function is atomic. See xexp . Parameters: Name Type Description base number Base. exponent number Exponent. Returns: Type Description float The base of natural logarithms to the power of x, or null if x is null or the operation isn't valid, e.g. -1 xexp .5 . See Also: .math.exp .math.xlog .math.xlog \u00b6 Logarithm. This function is atomic. See xlog . Parameters: Name Type Description x number Base. y number Exponent. Returns: Type Description float The base-x logarithm of y, or null if y is negative, or negative infinity if y is zero. See Also: .math.log .math.xexp","title":"math"},{"location":"math.html#mathabs","text":"Returns absolute value of x. This function is atomic. See abs . Parameter: Name Type Description x number A number. Returns: Type Description number Absolute value of x.","title":".math.abs"},{"location":"math.html#mathacos","text":"Returns the arccosine of x. This function is atomic. See acos . Parameter: Name Type Description x number A number. Returns: Type Description float Arccosine of x, in radians. Null is returned if x is not between -1 and 1.","title":".math.acos"},{"location":"math.html#mathasin","text":"Returns the arcsine of x. This function is atomic. See asin . Parameter: Name Type Description x number A number. Returns: Type Description float Arcsine of x, in radians. Null is returned if x is not between -1 and 1.","title":".math.asin"},{"location":"math.html#mathatan","text":"Returns the arctangent of x. This function is atomic. See atan . Parameter: Name Type Description x number A number. Returns: Type Description float Arctangent of x, in radians.","title":".math.atan"},{"location":"math.html#mathavg","text":"Arithmetic mean. See avg . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description float Arithmetic mean of x. Null is returned if x is empty, or contains both positive and negative infinity. Null items in x are ignored. See Also: .math.avgStrict .math.movingAvg .math.runningAvg .math.weightedAvg","title":".math.avg"},{"location":"math.html#mathavgstrict","text":"Arithmetic mean, strictly ignoring nulls. Parameter: Name Type Description x *[] Arbitrarily nested numeric list. Returns: Type Description * Arithmetic mean of x. Almost identical to .math.avg except that null-ignoring behavior is consistent regardless of how nested a list is. See Also: .math.avg","title":".math.avgStrict"},{"location":"math.html#mathceiling","text":"Round up. This function is atomic. See ceiling . Parameter: Name Type Description x number A number. Returns: Type Description long least integer greater than or equal to x.","title":".math.ceiling"},{"location":"math.html#mathcorrelation","text":"Returns correlation of two lists. See cor . Parameters: Name Type Description x number[] First numeric list. y number[] Second numeric list. Returns: Type Description float Correlation of x and y. The result is between -1 and 1.","title":".math.correlation"},{"location":"math.html#mathcos","text":"Returns the cosine of x. This function is atomic. See cos . Parameter: Name Type Description x number A number in radians. Returns: Type Description float Cosine of x. The result is null if x is null or infinity.","title":".math.cos"},{"location":"math.html#mathcovariance","text":"Returns covariance of two lists. See cov . Parameters: Name Type Description x number[] First numeric list. y number[] Second numeric list. Returns: Type Description float Covariance of x and y.","title":".math.covariance"},{"location":"math.html#mathdiff","text":"Returns differences between consecutive items in x, with the first difference being the same as the first element of x. See deltas . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number[] Differences between consecutive items in x, with the first difference being the same as the first element of x. See Also: .math.diff0","title":".math.diff"},{"location":"math.html#mathdiff0","text":"Returns differences between consecutive items in x, with the first difference being 0. Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number[] Differences between consecutive items in x, with the first difference being 0. See Also: .math.diff","title":".math.diff0"},{"location":"math.html#mathdiv","text":"Integer division. This function is atomic. See div . Parameters: Name Type Description x number Dividend. y number Divisor. Returns: Type Description number[] The greatest whole number that does not exceed x%y .","title":".math.div"},{"location":"math.html#mathema","text":"Exponential moving average. See ema . Parameters: Name Type Description x number | number[] A number or numeric list of the same length as y. y number[] A numeric list. Returns: Type Description float[] Exponential moving average of y, with x as the smoothing parameter.","title":".math.ema"},{"location":"math.html#mathexp","text":"Raise e to a power. This function is atomic. See exp . Parameter: Name Type Description x number Exponent. Returns: Type Description float The base of natural logarithms to the power of x, or null if x is null. See Also: .math.log .math.xexp","title":".math.exp"},{"location":"math.html#mathfloor","text":"Round down. This function is atomic. See floor . Parameter: Name Type Description x number A number. Returns: Type Description long greatest integer less than or equal to x.","title":".math.floor"},{"location":"math.html#mathinv","text":"Matrix inverse. See inv . Parameter: Name Type Description x float[][] A matrix. Returns: Type Description float[][] Inverse of non-singular float matrix x","title":".math.inv"},{"location":"math.html#mathlog","text":"Natural logarithm. This function is atomic. See log . Parameter: Name Type Description x number A number. Returns: Type Description float the natural logarithm of x, or null if x is null or less than zero, or negative infinity if x is zero. See Also: .math.exp .math.xlog","title":".math.log"},{"location":"math.html#mathlsq","text":"Least squares, approximately matrix division. See lsq . Parameters: Name Type Description a float[][] A matrix with the same number of columns as b. b float[][] A matrix whose number of rows do not exceed the number of columns, and whose rows are linearly independent. Returns: Type Description float[][] Least-squares solution to a linear matrix equation a=x mul b where mul is matrix multiplication. See Also: .math.matmul","title":".math.lsq"},{"location":"math.html#mathmatmul","text":"Matrix multiplication, or dot product. See mmu . Parameters: Name Type Description x float[] | float[][] A float vector or matrix. y float[] | float[][] Another float vector or matrix, where the number of elements in y must match the number of elements in x if x is a vector, or the number of columns of x if x is a matrix. Returns: Type Description float | float[] Matrix product or dot product of x and y. See Also: .math.lsq","title":".math.matmul"},{"location":"math.html#mathmax","text":"Maximum. See max . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number Maximum of items in x. Nulls are ignored, except that if the items of x are all nulls, the result is negative infinity. See Also: .math.min .math.movingMax .math.runningMax","title":".math.max"},{"location":"math.html#mathmedian","text":"Median. See med . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description float Median of x.","title":".math.median"},{"location":"math.html#mathmin","text":"Minimum. See min . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number Minimum of items in x. Nulls are ignored, except that if the items of x are all nulls, the result is infinity. See Also: .math.max .math.movingMin .math.runningMin","title":".math.min"},{"location":"math.html#mathminstrict","text":"Minimum, strictly ignoring null. Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number Minimum of items in x. Almost identical to .math.min except that null-ignoring behavior is consistent regardless of how nested a list is. See Also: .math.min","title":".math.minStrict"},{"location":"math.html#mathmod","text":"Modulus. This function is atomic. See mod . Parameters: Name Type Description x number Dividend. y number Divisor. Returns: Type Description number The remainder of x%y .","title":".math.mod"},{"location":"math.html#mathmovingavg","text":"Moving averages. See mavg . Parameters: Name Type Description x short | int | long A positive finite integer. y number[] A numeric list. Returns: Type Description float x-item moving average of y. The first x-1 elements of the results use only the first x-1 elements of y, respectively. See Also: .math.avg .math.runningAvg .math.weightedAvg","title":".math.movingAvg"},{"location":"math.html#mathmovingmax","text":"Moving maximums. See mmax . Parameters: Name Type Description x number A positive finite integer. y number[] A numeric list. Returns: Type Description number x-item moving maximums of y. The first x-1 elements of the results use only the first x-1 elements of y, respectively. See Also: .math.max .math.movingMin .math.runningMax","title":".math.movingMax"},{"location":"math.html#mathmovingmin","text":"Moving minimums. See mmin . Parameters: Name Type Description x number[] A positive finite integer. y number[] A numeric list. Returns: Type Description number x-item moving minimums of y. The first x-1 elements of the results use only the first x-1 elements of y, respectively. See Also: .math.min .math.movingMax .math.runningMin","title":".math.movingMin"},{"location":"math.html#mathmovingstdev","text":"Returns x-item moving standard deviation of y. See mdev . Parameters: Name Type Description x short | int | long Number of items in the calculation scope. y number[] A numeric list. Returns: Type Description number[] x-item moving standard deviation of y. The first x-1 elements of the results use only the first x-1 elements of y, respectively.","title":".math.movingStdev"},{"location":"math.html#mathmovingsum","text":"Moving sums. See msum . Parameters: Name Type Description x short | int | long A positive finite integer. y number[] A numeric list. Returns: Type Description number x-item moving sums of y. The first x-1 elements of the results use only the first x-1 elements of y, respectively. See Also: .math.runningSum .math.sum .math.weightedSum","title":".math.movingSum"},{"location":"math.html#mathneg","text":"Negate. This function is atomic. See neg . Parameter: Name Type Description x bool | number A number. Returns: Type Description number Negation of x.","title":".math.neg"},{"location":"math.html#mathprd","text":"Product. See prd . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number Product of x. Nulls are treated as 1. See Also: .math.prdStrict .math.runningPrd","title":".math.prd"},{"location":"math.html#mathprdstrict","text":"Product, strictly ignoring nulls. Parameter: Name Type Description x *[] A numeric list. Returns: Type Description * Product of x. Almost identical to .math.prd except that null-ignoring behavior is consistent regardless of how nested a list is. See Also: .math.prd","title":".math.prdStrict"},{"location":"math.html#mathrunningavg","text":"Running averages. See avgs . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description float[] Running averages of x. It applies function .math.avg to successive prefixes of x. See Also: .math.avg .math.movingAvg .math.weightedAvg","title":".math.runningAvg"},{"location":"math.html#mathrunningmax","text":"Maximums. See maxs . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number Running maximum of x. It applies function .math.max to successive prefixes of x. See Also: .math.max .math.movingMax .math.runningMin","title":".math.runningMax"},{"location":"math.html#mathrunningmin","text":"Minimums. See mins . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number Running minimum of x. It applies function .math.min to successive prefixes of x. See Also: .math.min .math.movingMin .math.runningMax","title":".math.runningMin"},{"location":"math.html#mathrunningprd","text":"Products. See prds . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number Running products of x. It applies function .math.prd to successive prefixes of x. See Also: .math.prd","title":".math.runningPrd"},{"location":"math.html#mathrunningsum","text":"Running sums. See sums . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number Running sums of x. It applies function .math.sum to successive prefixes of x. See Also: .math.movingSum .math.sum .math.weightedSum","title":".math.runningSum"},{"location":"math.html#mathsin","text":"Returns the sine of x. This function is atomic. See sin . Parameter: Name Type Description x number A number in radians Returns: Type Description float Sine of x. The result is null if x is null or infinity.","title":".math.sin"},{"location":"math.html#mathstdev","text":"Returns standard deviation. See dev . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description float Standard deviation of x.","title":".math.stdev"},{"location":"math.html#mathsum","text":"Total. See sum . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description number Total of x. Null items in x are treated as zeros. See Also: .math.movingSum .math.runningSum .math.sumStrict .math.weightedSum","title":".math.sum"},{"location":"math.html#mathsumstrict","text":"Total, consistently ignoring nulls. Parameter: Name Type Description x *[] Arbitrarily nested numeric list. Returns: Type Description * Total of x. Almost identical to .math.sum except that null-ignoring behavior is consistent regardless of how nested a list is. See Also: .math.sum","title":".math.sumStrict"},{"location":"math.html#mathtan","text":"Returns the tangent of x. This function is atomic. See tan . Parameter: Name Type Description x number A number in radians. Returns: Type Description float Tangent of x. The result is null if x is null or infinity.","title":".math.tan"},{"location":"math.html#mathunbiasedstdev","text":"Returns unbiased estimation of standard deviation. See sdev . Parameter: Name Type Description x number[] A numeric list. Returns: Type Description float unbiased estimation of standard deviation of x. See Also: .math.stdev","title":".math.unbiasedStdev"},{"location":"math.html#mathweightedavg","text":"Weighted average. See wavg . Parameters: Name Type Description x number[] A numeric list representing weights. y number[] A numeric list representing values. Returns: Type Description float Average of y weighted by x. See Also: .math.avg .math.movingAvg .math.runningAvg","title":".math.weightedAvg"},{"location":"math.html#mathweightedsum","text":"Weighted sum. See wsum . Parameters: Name Type Description x number[] A numeric list representing weights. y number[] A numeric list representing values. Returns: Type Description float Sum of y weighted by x. See Also: .math.movingSum .math.runningSum .math.sum","title":".math.weightedSum"},{"location":"math.html#mathxexp","text":"Raise x to a power. This function is atomic. See xexp . Parameters: Name Type Description base number Base. exponent number Exponent. Returns: Type Description float The base of natural logarithms to the power of x, or null if x is null or the operation isn't valid, e.g. -1 xexp .5 . See Also: .math.exp .math.xlog","title":".math.xexp"},{"location":"math.html#mathxlog","text":"Logarithm. This function is atomic. See xlog . Parameters: Name Type Description x number Base. y number Exponent. Returns: Type Description float The base-x logarithm of y, or null if y is negative, or negative infinity if y is zero. See Also: .math.log .math.xexp","title":".math.xlog"}]}