[{"namespace":"/mnt/d/Workspaces/fluent-q/specs","fileName":"math.quke","feature":"Support mathematical calculations","block":"Should","description":"return the arithmetic mean of the argument, ignoring null consistently","expectations":"the arithmetic mean of a 1-level nested list ignoring null","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.775538000","time":"0D00:00:00.000010000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs","fileName":"math.quke","feature":"Support mathematical calculations","block":"Should","description":"return the arithmetic mean of the argument, ignoring null consistently","expectations":"the arithmetic mean of a 2-level nested list ignoring null","line":10,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.775585000","time":"0D00:00:00.000010000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs","fileName":"math.quke","feature":"Support mathematical calculations","block":"Should","description":"return the minimum of the argument, ignoring null consistently","expectations":"the minimum of a 1-level nested list ignoring null","line":14,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.775642000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs","fileName":"math.quke","feature":"Support mathematical calculations","block":"Should","description":"return the minimum of the argument, ignoring null consistently","expectations":"the minimum of a 2-level nested list ignoring null","line":17,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.775682000","time":"0D00:00:00.000008000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs","fileName":"math.quke","feature":"Support mathematical calculations","block":"Should","description":"return the product of the argument, ignoring null consistently","expectations":"the product of a 1-level nested list ignoring null","line":21,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.775736000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs","fileName":"math.quke","feature":"Support mathematical calculations","block":"Should","description":"return the product of the argument, ignoring null consistently","expectations":"the product of a 2-level nested list ignoring null","line":24,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.775776000","time":"0D00:00:00.000008000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs","fileName":"math.quke","feature":"Support mathematical calculations","block":"Should","description":"return the ratios of consecutive items, with the first ratio being 1","expectations":"the ratios of consecutive items, with the first ratio being 1","line":28,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.775829000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bitsToInteger.quke","feature":"Cast bits to integer.","block":"Should","description":"Cast 8 bits to a byte.","expectations":"0x01 from 8 bits (7#0b),1b","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.740019000","time":"0D00:00:00.000008000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bitsToInteger.quke","feature":"Cast bits to integer.","block":"Should","description":"Cast 16 bits to an short integer.","expectations":"1h from 16 bits (15#0b),1b","line":11,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.740078000","time":"0D00:00:00.000006000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bitsToInteger.quke","feature":"Cast bits to integer.","block":"Should","description":"Cast 32 bits to an int integer.","expectations":"1i from 32 bits (31#0b),1b","line":15,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.740130000","time":"0D00:00:00.000006000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bitsToInteger.quke","feature":"Cast bits to integer.","block":"Should","description":"Cast 64 bits to a long integer.","expectations":"1j from 64 bits (63#0b),1b","line":19,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.740181000","time":"0D00:00:00.000006000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bitsToInteger.quke","feature":"Cast bits to integer.","block":"Should","description":"Throw \"length\" error if the number of bits is not 8/16/32/64.","expectations":"\"length\" error if the number of bytes is 9.","line":23,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.740233000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bitsToInteger.quke","feature":"Cast bits to integer.","block":"Should","description":"Throw \"type\" error if the data type is not bool vector.","expectations":"\"type\" error if the data type is byte vector.","line":27,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.740285000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bytesToInteger.quke","feature":"Cast bytes to integer.","block":"Should","description":"Cast 2 bytes to a short integer.","expectations":"1h from 2 bytes 0x0001","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.743209000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bytesToInteger.quke","feature":"Cast bytes to integer.","block":"Should","description":"Cast 4 bytes to an int integer.","expectations":"1i from 4 bytes 0x00000001","line":11,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.743267000","time":"0D00:00:00.000005000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bytesToInteger.quke","feature":"Cast bytes to integer.","block":"Should","description":"Cast 8 bytes to a long integer.","expectations":"1j from 8 bytes 0x0000000000000001","line":15,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.743350000","time":"0D00:00:00.000006000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bytesToInteger.quke","feature":"Cast bytes to integer.","block":"Should","description":"Throw \"length\" error if the number of bytes is not 2/4/8.","expectations":"\"length\" error if the number of bytes is 3.","line":19,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.743403000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bytesToInteger.quke","feature":"Cast bytes to integer.","block":"Should","description":"Throw \"type\" error if the data type is not byte vector.","expectations":"\"type\" error if the data type is bool vector.","line":23,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.743456000","time":"0D00:00:00.000006000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/io","fileName":"deleteAll.quke","feature":"Delete a file, or directory and its files and subdirectories recursively.","block":"Should","description":"Delete a file.","expectations":"The specified file is deleted","line":14,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.748836000","time":"0D00:00:00.000027000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/io","fileName":"deleteAll.quke","feature":"Delete a file, or directory and its files and subdirectories recursively.","block":"Should","description":"Delete a directory recursively.","expectations":"The specified directory is deleted","line":19,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.752497000","time":"0D00:00:00.000072000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/io","fileName":"isDir.quke","feature":"Check if the argument represents a directory and it exists.","block":"Should","description":"Check if the argument represents a file and it exists.","expectations":"1b for an existent directory.","line":12,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.758848000","time":"0D00:00:00.000018000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/io","fileName":"isDir.quke","feature":"Check if the argument represents a directory and it exists.","block":"Should","description":"Check if the argument represents a file and it exists.","expectations":"0b for an existent file.","line":14,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.758905000","time":"0D00:00:00.000008000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/io","fileName":"isDir.quke","feature":"Check if the argument represents a directory and it exists.","block":"Should","description":"Check if the argument represents a file and it exists.","expectations":"0b for an non-existent path.","line":16,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.758948000","time":"0D00:00:00.000009000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/io","fileName":"isFile.quke","feature":"Check if the argument represents a file and it exists.","block":"Should","description":"Check if the argument represents a file and it exists.","expectations":"1b for an existent file.","line":12,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.765113000","time":"0D00:00:00.000011000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/io","fileName":"isFile.quke","feature":"Check if the argument represents a file and it exists.","block":"Should","description":"Check if the argument represents a file and it exists.","expectations":"0b for an existent directory.","line":14,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.765161000","time":"0D00:00:00.000015000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/io","fileName":"isFile.quke","feature":"Check if the argument represents a file and it exists.","block":"Should","description":"Check if the argument represents a file and it exists.","expectations":"0b for an non-existent path.","line":16,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.765211000","time":"0D00:00:00.000010000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/io","fileName":"listAll.quke","feature":"List file or directory recursively.","block":"Should","description":"List file or directory recursively.","expectations":"files and subdirectories are listed recursively","line":12,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-03T14:37:45.770974000","time":"0D00:00:00.000035000"}]