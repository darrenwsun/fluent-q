[{"namespace":"/mnt/d/Workspaces/fluent-q/specs","fileName":"math.quke","feature":"Support mathematical calculations","block":"Should","description":"return the arithmetic mean of the argument, ignoring null consistently","expectations":"the arithmetic mean of a 1-level nested list ignoring null","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.426703000","time":"0D00:00:00.000009000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs","fileName":"math.quke","feature":"Support mathematical calculations","block":"Should","description":"return the arithmetic mean of the argument, ignoring null consistently","expectations":"the arithmetic mean of a 2-level nested list ignoring null","line":10,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.426749000","time":"0D00:00:00.000009000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs","fileName":"math.quke","feature":"Support mathematical calculations","block":"Should","description":"return the minimum of the argument, ignoring null consistently","expectations":"the minimum of a 1-level nested list ignoring null","line":14,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.426805000","time":"0D00:00:00.000008000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs","fileName":"math.quke","feature":"Support mathematical calculations","block":"Should","description":"return the minimum of the argument, ignoring null consistently","expectations":"the minimum of a 2-level nested list ignoring null","line":17,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.426847000","time":"0D00:00:00.000008000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs","fileName":"math.quke","feature":"Support mathematical calculations","block":"Should","description":"return the product of the argument, ignoring null consistently","expectations":"the product of a 1-level nested list ignoring null","line":21,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.426901000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs","fileName":"math.quke","feature":"Support mathematical calculations","block":"Should","description":"return the product of the argument, ignoring null consistently","expectations":"the product of a 2-level nested list ignoring null","line":24,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.426942000","time":"0D00:00:00.000008000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs","fileName":"math.quke","feature":"Support mathematical calculations","block":"Should","description":"return the ratios of consecutive items, with the first ratio being 1","expectations":"the ratios of consecutive items, with the first ratio being 1","line":28,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.426995000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bitsToInteger.quke","feature":"Cast bits to integer.","block":"Should","description":"Cast 8 bits to a byte.","expectations":"0x01 from 8 bits (7#0b),1b","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.318833000","time":"0D00:00:00.000008000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bitsToInteger.quke","feature":"Cast bits to integer.","block":"Should","description":"Cast 16 bits to an short integer.","expectations":"1h from 16 bits (15#0b),1b","line":11,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.318891000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bitsToInteger.quke","feature":"Cast bits to integer.","block":"Should","description":"Cast 32 bits to an int integer.","expectations":"1i from 32 bits (31#0b),1b","line":15,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.318943000","time":"0D00:00:00.000006000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bitsToInteger.quke","feature":"Cast bits to integer.","block":"Should","description":"Cast 64 bits to a long integer.","expectations":"1j from 64 bits (63#0b),1b","line":19,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.318995000","time":"0D00:00:00.000005000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bitsToInteger.quke","feature":"Cast bits to integer.","block":"Should","description":"Throw \"length\" error if the number of bits is not 8/16/32/64.","expectations":"\"length\" error if the number of bytes is 9.","line":23,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.319045000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bitsToInteger.quke","feature":"Cast bits to integer.","block":"Should","description":"Throw \"type\" error if the data type is not bool vector.","expectations":"\"type\" error if the data type is byte vector.","line":27,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.319097000","time":"0D00:00:00.000006000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bytesToInteger.quke","feature":"Cast bytes to integer.","block":"Should","description":"Cast 2 bytes to a short integer.","expectations":"1h from 2 bytes 0x0001","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.322962000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bytesToInteger.quke","feature":"Cast bytes to integer.","block":"Should","description":"Cast 4 bytes to an int integer.","expectations":"1i from 4 bytes 0x00000001","line":11,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.323017000","time":"0D00:00:00.000006000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bytesToInteger.quke","feature":"Cast bytes to integer.","block":"Should","description":"Cast 8 bytes to a long integer.","expectations":"1j from 8 bytes 0x0000000000000001","line":15,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.323068000","time":"0D00:00:00.000005000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bytesToInteger.quke","feature":"Cast bytes to integer.","block":"Should","description":"Throw \"length\" error if the number of bytes is not 2/4/8.","expectations":"\"length\" error if the number of bytes is 3.","line":19,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.323118000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"bytesToInteger.quke","feature":"Cast bytes to integer.","block":"Should","description":"Throw \"type\" error if the data type is not byte vector.","expectations":"\"type\" error if the data type is bool vector.","line":23,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.323169000","time":"0D00:00:00.000006000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"integerToBits.quke","feature":"Cast integer to bits.","block":"Should","description":"Cast a byte to 8 bits.","expectations":"(7#0b),1b from .cast.integerToBits 0x01","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.325702000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"integerToBits.quke","feature":"Cast integer to bits.","block":"Should","description":"Cast a short integer to 16 bits.","expectations":"(15#0b),1b from .cast.integerToBits 1h","line":11,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.325756000","time":"0D00:00:00.000006000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"integerToBits.quke","feature":"Cast integer to bits.","block":"Should","description":"Cast an int integer to 32 bits.","expectations":"(31#0b),1b from .cast.integerToBits 1i","line":15,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.325807000","time":"0D00:00:00.000006000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"integerToBits.quke","feature":"Cast integer to bits.","block":"Should","description":"Cast a long integer to 64 bits.","expectations":"(63#0b),1b from .cast.integerToBits 1j","line":19,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.325857000","time":"0D00:00:00.000006000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"integerToBytes.quke","feature":"Cast integer to bytes.","block":"Should","description":"Cast a short integer to 2 bytes.","expectations":"0x0001 from .cast.integerToBytes 1h","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.328317000","time":"0D00:00:00.000006000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"integerToBytes.quke","feature":"Cast integer to bytes.","block":"Should","description":"Cast an int integer to 4 bytes.","expectations":"0x00000001 from .cast.integerToBytes 1i","line":11,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.328373000","time":"0D00:00:00.000005000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/cast","fileName":"integerToBytes.quke","feature":"Cast integer to bytes.","block":"Should","description":"Cast a long integer to 8 bytes.","expectations":"0x0000000000000001 from .cast.integerToBytes 1j","line":15,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.328424000","time":"0D00:00:00.000005000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/dict","fileName":"argSortAsc.quke","feature":"Keys for ascending sort.","block":"Should","description":"Get keys reordered to sort a dictionary in ascending order.","expectations":"````b`a``` from `.dict.argSortAsc[`a`b!2 1]`.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.330828000","time":"0D00:00:00.000053000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/dict","fileName":"argSortDesc.quke","feature":"Keys for descending sort.","block":"Should","description":"Get keys reordered to sort a dictionary in descending order.","expectations":"````b`a``` from `.dict.argSortDesc[`a`b!1 2]`.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.333408000","time":"0D00:00:00.000008000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/dict","fileName":"rankAsc.quke","feature":"Position in the ascending sorted dictionary.","block":"Should","description":"Get indices of values they would appear at in the ascending sorted list.","expectations":"`2 0 1` from `.dict.rankAsc[`a`b`c!3 1 2]`.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.336132000","time":"0D00:00:00.000010000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/dict","fileName":"rankDesc.quke","feature":"Position in the descending sorted dictionary.","block":"Should","description":"Get indices of values they would appear at in the descending sorted list.","expectations":"`0 2 1` from `.dict.rankDesc[`a`b`c!3 1 2]`.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.338757000","time":"0D00:00:00.000009000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/dict","fileName":"sortAsc.quke","feature":"Sort dictionary in ascending order of value.","block":"Should","description":"Sort a dictionary in ascending order of value.","expectations":"`b`a`c!`s#1 2 3 from .dict.sortAsc[`a`b`c!2 1 3].","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.341224000","time":"0D00:00:00.000010000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/dict","fileName":"sortDesc.quke","feature":"Sort dictionary in descending order of value.","block":"Should","description":"Sort a dictionary in descending order of value.","expectations":"`c`a`b!3 2 1 from .dict.sortDesc[`a`b`c!2 1 3].","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.343693000","time":"0D00:00:00.000008000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/file","fileName":"join.quke","feature":"Join directories and file to form a path.","block":"Should","description":"Join directories and file to form a path.","expectations":"`:/hdb/2022.01.01/trade from .file.join[`:/hdb`2022.01.01`trade].","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.346102000","time":"0D00:00:00.000008000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/file","fileName":"split.quke","feature":"Split file path into directory and file parts.","block":"Should","description":"Split file path into directory and file parts.","expectations":"`:/hdb/2022.01.01`trade from .file.split[`:/hdb/2022.01.01/trade].","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.348509000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/io","fileName":"deleteAll.quke","feature":"Delete a file, or directory and its files and subdirectories recursively.","block":"Should","description":"Delete a file.","expectations":"The specified file is deleted","line":14,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.357703000","time":"0D00:00:00.000033000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/io","fileName":"deleteAll.quke","feature":"Delete a file, or directory and its files and subdirectories recursively.","block":"Should","description":"Delete a directory recursively.","expectations":"The specified directory is deleted","line":19,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.363011000","time":"0D00:00:00.000147000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/io","fileName":"isDir.quke","feature":"Check if the argument represents a directory and it exists.","block":"Should","description":"Check if the argument represents a file and it exists.","expectations":"1b for an existent directory.","line":12,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.370719000","time":"0D00:00:00.000022000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/io","fileName":"isDir.quke","feature":"Check if the argument represents a directory and it exists.","block":"Should","description":"Check if the argument represents a file and it exists.","expectations":"0b for an existent file.","line":14,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.370781000","time":"0D00:00:00.000009000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/io","fileName":"isDir.quke","feature":"Check if the argument represents a directory and it exists.","block":"Should","description":"Check if the argument represents a file and it exists.","expectations":"0b for an non-existent path.","line":16,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.370825000","time":"0D00:00:00.000010000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/io","fileName":"isFile.quke","feature":"Check if the argument represents a file and it exists.","block":"Should","description":"Check if the argument represents a file and it exists.","expectations":"1b for an existent file.","line":12,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.377391000","time":"0D00:00:00.000012000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/io","fileName":"isFile.quke","feature":"Check if the argument represents a file and it exists.","block":"Should","description":"Check if the argument represents a file and it exists.","expectations":"0b for an existent directory.","line":14,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.377442000","time":"0D00:00:00.000016000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/io","fileName":"isFile.quke","feature":"Check if the argument represents a file and it exists.","block":"Should","description":"Check if the argument represents a file and it exists.","expectations":"0b for an non-existent path.","line":16,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.377494000","time":"0D00:00:00.000009000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/io","fileName":"listAll.quke","feature":"List file or directory recursively.","block":"Should","description":"List file or directory recursively.","expectations":"files and subdirectories are listed recursively","line":12,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.383651000","time":"0D00:00:00.000037000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/list","fileName":"argSortAsc.quke","feature":"Indices for ascending sort.","block":"Should","description":"Get indices needed to sort vector in ascending order.","expectations":"`1 2 0` from `.list.argSortAsc[3 1 2]`.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.387616000","time":"0D00:00:00.000009000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/list","fileName":"argSortDesc.quke","feature":"Indices for descending sort.","block":"Should","description":"Get indices needed to sort vector in descending order.","expectations":"`0 2 1` from `.list.argSortDesc[3 1 2]`.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.390277000","time":"0D00:00:00.000008000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/list","fileName":"binSearchFirst.quke","feature":"Binary search - first index of not smaller value.","block":"Should","description":"Get index of the first item in the vector whose value is not smaller than the target.","expectations":"`1` from `.list.binSearchFirst[0 2 2 4; 2]`.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.393092000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/list","fileName":"binSearchFirst.quke","feature":"Binary search - first index of not smaller value.","block":"Should","description":"Get index of the first item in the vector whose value is not smaller than the target.","expectations":"`3` from `.list.binSearchFirst[0 2 2 4; 3]`.","line":9,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.393135000","time":"0D00:00:00.000006000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/list","fileName":"binSearchFirst.quke","feature":"Binary search - first index of not smaller value.","block":"Should","description":"Get index of the first item in the vector whose value is not smaller than the target.","expectations":"`3 4` from `.list.binSearchFirst[0 2 2 4; 3 5]`.","line":11,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.393175000","time":"0D00:00:00.000006000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/list","fileName":"binSearchFirst.quke","feature":"Binary search - first index of not smaller value.","block":"Should","description":"Get the length of the list if the target is larger than the last element.","expectations":"`4` from `.list.binSearchFirst[0 2 2 4; 5]`.","line":15,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.393227000","time":"0D00:00:00.000005000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/list","fileName":"binSearchLast.quke","feature":"Binary search - last index of not greater value.","block":"Should","description":"Get index of the last item in the vector whose value is not greater than the target.","expectations":"`2` from `.list.binSearchLast[0 2 2 4; 2]`.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.395932000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/list","fileName":"binSearchLast.quke","feature":"Binary search - last index of not greater value.","block":"Should","description":"Get index of the last item in the vector whose value is not greater than the target.","expectations":"`2` from `.list.binSearchLast[0 2 2 4; 3]`.","line":9,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.395976000","time":"0D00:00:00.000006000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/list","fileName":"binSearchLast.quke","feature":"Binary search - last index of not greater value.","block":"Should","description":"Get index of the last item in the vector whose value is not greater than the target.","expectations":"`2 3` from `.list.binSearchLast[0 2 2 4; 3 5]`.","line":11,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.396016000","time":"0D00:00:00.000006000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/list","fileName":"binSearchLast.quke","feature":"Binary search - last index of not greater value.","block":"Should","description":"Get -1 if the target is smaller than the first element.","expectations":"`-1` from `.list.binSearchLast[0 2 2 4; -2]`.","line":15,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.396067000","time":"0D00:00:00.000006000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/list","fileName":"distribute.quke","feature":"Distribute evenly.","block":"Should","description":"Get bucket labels each element is assigned to after sorting the list.","expectations":"`0 0 1 1 2 2` from `.list.distribute[til 6; 3]`.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.398640000","time":"0D00:00:00.000010000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/list","fileName":"distribute.quke","feature":"Distribute evenly.","block":"Should","description":"Get bucket labels each element is assigned to after sorting the list.","expectations":"`0 0 0 1 1 2 2` from `.list.distribute[til 7; 3]`.","line":9,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.398687000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/list","fileName":"rankAsc.quke","feature":"Position in the ascending sorted list.","block":"Should","description":"Get indices of elements they would appear at in the ascending sorted list.","expectations":"`2 0 1` from `.list.rankAsc[3 1 2]`.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.401325000","time":"0D00:00:00.000009000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/list","fileName":"rankDesc.quke","feature":"Position in the descending sorted list.","block":"Should","description":"Get indices of elements they would appear at in the descending sorted list.","expectations":"`0 2 1` from `.list.rankDesc[3 1 2]`.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.404162000","time":"0D00:00:00.000009000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/list","fileName":"repeat.quke","feature":"Repeat.","block":"Should","description":"Repeat keys for the corresponding number of times.","expectations":"`a`b`b from .list.repeat[`a`b!1 2].","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.406784000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/list","fileName":"roundDownByCheckpoints.quke","feature":"Round down by checkpoints.","block":"Should","description":"Get a list where each element is rounded down to the nearest checkpoint.","expectations":"`0 0 2 2 2 5 5` from `.list.roundDownByCheckpoints[til 7; 0 2 5]`.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.409315000","time":"0D00:00:00.000008000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/list","fileName":"roundDownByInterval.quke","feature":"Round down by interval.","block":"Should","description":"Get a list where each element is rounded down to the nearest multiple of the interval.","expectations":"`0 0 0 3 3 3 6` from `.list.roundDownByInterval[til 7; 3]`.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.411882000","time":"0D00:00:00.000011000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/list","fileName":"sortAsc.quke","feature":"Sort vector in ascending order.","block":"Should","description":"Sort a vector in ascending order.","expectations":"`s#1 2 3 from .list.sortAsc[2 1 3].","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.414432000","time":"0D00:00:00.000010000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/list","fileName":"sortDesc.quke","feature":"Sort vector in descending order.","block":"Should","description":"Sort a vector in descending order.","expectations":"3 2 1 from .list.sortDesc[2 1 3].","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.417045000","time":"0D00:00:00.000009000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/math","fileName":"polyCoefficients.quke","feature":"Calculate polynomial coefficients.","block":"Should","description":"Return coefficients under which a polynomial value is obtained at a base value.","expectations":"`20 10 3 17` from `.math.polyCoefficients[20100317; 100]`.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.420153000","time":"0D00:00:00.000032000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/math","fileName":"polynomial.quke","feature":"Calculate polynomial.","block":"Should","description":"Return a polynomial evaluated at given base under given coefficients.","expectations":"20100317 from .math.polynomial[2010 3 17; 100].","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.423306000","time":"0D00:00:00.000008000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/str","fileName":"split.quke","feature":"String split.","block":"Should","description":"Split a string by a delimiter","expectations":"(\"one\"; \"two\") given the string \"one,two\" and the delimiter \",\".","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.429439000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/str","fileName":"splitByLineBreak.quke","feature":"String split by line break.","block":"Should","description":"Split a string by Linux-style line break","expectations":"(\"one\"; \"two\") given the string \"one\\ntwo\".","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.432005000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/str","fileName":"splitByLineBreak.quke","feature":"String split by line break.","block":"Should","description":"Split a string by Window-style line break","expectations":"(\"one\"; \"two\") given the string \"one\\r\\ntwo\".","line":11,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.432062000","time":"0D00:00:00.000006000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/tbl","fileName":"columns.quke","feature":"Column names of a table.","block":"Should","description":"Return column names of a table.","expectations":"````c1`c2``` from ```.tbl.columns[([] c1:(); c2:())]```.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.434638000","time":"0D00:00:00.000009000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/tbl","fileName":"columns.quke","feature":"Column names of a table.","block":"Should","description":"Return column names of a table.","expectations":"````c1`c2``` from ```.tbl.columns[([c1:()] c2:())]```.","line":9,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.434683000","time":"0D00:00:00.000007000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/tbl","fileName":"foreignKeys.quke","feature":"Foreign-key columns of a table.","block":"Should","description":"return a dictionary that maps foreign-key columns to their tables.","expectations":"a dictionary that maps foreign-key columns to their tables.","line":8,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.437347000","time":"0D00:00:00.000019000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/tbl","fileName":"renameCol.quke","feature":"Rename table columns.","block":"Should","description":"Return a table with column renamed.","expectations":"`([] c3:(); c2:())` from ```.tbl.renameCol[([] c1:(); c2:()); enlist`c3]```.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.440109000","time":"0D00:00:00.000010000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/tbl","fileName":"renameCol.quke","feature":"Rename table columns.","block":"Should","description":"Return a table with column renamed.","expectations":"`([c3:()] c2:())` from ```.tbl.renameCol[([c1:()] c2:()); enlist`c3]```.","line":9,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.440156000","time":"0D00:00:00.000008000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/tbl","fileName":"renameCol.quke","feature":"Rename table columns.","block":"Should","description":"Return a table with column renamed.","expectations":"`([] c3:(); c4:())` from ```.tbl.renameCol[([] c1:(); c2:()); `c1`c2!`c3`c4]```.","line":11,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.440198000","time":"0D00:00:00.000009000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/tbl","fileName":"reorderCol.quke","feature":"Reorder table columns.","block":"Should","description":"Return a table where the columns of the specified names appear first.","expectations":"`([] c2:(); c1:())` from ```.tbl.reorderCol[([] c1:(); c2:()); enlist`c2]```.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.442850000","time":"0D00:00:00.000010000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/tbl","fileName":"sortAsc.quke","feature":"Sort table in ascending order of the first non-key column.","block":"Should","description":"Sort a simple table in ascending order of the first column.","expectations":"```([] c1:`p#`a`b; c2:1 2)``` from ```.tbl.sortAsc[([] c1:`b`a; c2:2 1)]```.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.445626000","time":"0D00:00:00.000016000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/tbl","fileName":"sortAsc.quke","feature":"Sort table in ascending order of the first non-key column.","block":"Should","description":"Sort a keyed table with only one non-key column in ascending order of the first non-key column.","expectations":"```([c1:`b`a] c2:`s#1 2)``` from ```.tbl.sortAsc[([c1:`a`b] c2:2 1)]```.","line":12,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.445691000","time":"0D00:00:00.000010000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/tbl","fileName":"sortAsc.quke","feature":"Sort table in ascending order of the first non-key column.","block":"Should","description":"Sort a keyed table with more than one non-key column in ascending order of the first non-key column.","expectations":"```([c1:`b`a] c2:`p#1 2; c3:10b)``` from ```.tbl.sortAsc[([c1:`a`b] c2:2 1; c3:01b)]```.","line":17,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.445747000","time":"0D00:00:00.000012000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/tbl","fileName":"sortAscByColumns.quke","feature":"Sort table in ascending order by given columns.","block":"Should","description":"Sort a simple table in ascending order by given columns.","expectations":"```([] c1:`s#`a`b; c2:1 2)``` from ```.tbl.sortAscByColumns[([] c1:`b`a; c2:2 1); `c1]```.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.448499000","time":"0D00:00:00.000020000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/tbl","fileName":"sortAscByColumns.quke","feature":"Sort table in ascending order by given columns.","block":"Should","description":"Sort a keyed table in ascending order by given columns.","expectations":"```([c1:`b`a] c2:`s#1 2)``` from ```.tbl.sortAscByColumns[([c1:`a`b] c2:2 1); `c2]```.","line":12,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.448569000","time":"0D00:00:00.000019000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/tbl","fileName":"sortDesc.quke","feature":"Sort table in descending order of the first non-key column.","block":"Should","description":"Sort a simple table in descending order of the first column.","expectations":"```([] c1:`b`a; c2:2 1)``` from ```.tbl.sortDesc[([] c1:`a`b; c2:1 2)]```.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.451310000","time":"0D00:00:00.000011000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/tbl","fileName":"sortDesc.quke","feature":"Sort table in descending order of the first non-key column.","block":"Should","description":"Sort a keyed table in descending order of the first non-key column.","expectations":"```([c1:`b`a] c2:2 1)``` from ```.tbl.sortDesc[([c1:`a`b] c2:1 2)]```.","line":14,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.451372000","time":"0D00:00:00.000008000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/tbl","fileName":"sortDescByColumns.quke","feature":"Sort table in descending order by given columns.","block":"Should","description":"Sort a simple table in descending order by given columns.","expectations":"```([] c1:`b`a; c2:2 1)``` from ```.tbl.sortDescByColumns[([] c1:`a`b; c2:1 2); `c1]```.","line":7,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.454433000","time":"0D00:00:00.000018000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/tbl","fileName":"sortDescByColumns.quke","feature":"Sort table in descending order by given columns.","block":"Should","description":"Sort a keyed table in descending order by given columns.","expectations":"```([c1:`b`a] c2:2 1)``` from ```.tbl.sortDescByColumns[([c1:`a`b] c2:1 2); `c2]```.","line":14,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.454502000","time":"0D00:00:00.000015000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/tbl","fileName":"toCsv.quke","feature":"Convert table to CSV format.","block":"Should","description":"Return CSV format of the table.","expectations":"```(\"c1,c2\";\"a,1\";\"b,2\")``` from ```.tbl.toCsv[([] c1:`a`b; c2:1 2)]```.","line":8,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.457048000","time":"0D00:00:00.000054000"},{"namespace":"/mnt/d/Workspaces/fluent-q/specs/tbl","fileName":"toCsv.quke","feature":"Convert table to CSV format.","block":"Should","description":"Return CSV format of the table.","expectations":"```(\"c1,c2\";\"a,1\";\"b,2\")``` from ```.tbl.toCsv[([c1:`a`b] c2:1 2)]```.","line":11,"success":true,"result":{"expect":null,"toMatch":null,"expectError":"","toMatchError":""},"error":"","aborted":false,"skipped":false,"parseError":false,"start":"2022-07-24T02:30:29.457142000","time":"0D00:00:00.000013000"}]